name: Terraform CI/CD Workflow

on:
  pull_request:
    branches:
      - develop
      - main
  push:
    branches:
      - develop
      - main
      - actions_*

jobs:
  terraform:
    runs-on: ubuntu-latest

    # Automatically choose the environment: default is "development", use "production" for the "main" branch
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

    env:
      # Terraform variables are pulled from GitHub Environment Variables
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_location: ${{ vars.TF_VAR_LOCATION }}
      TF_VAR_node_count: ${{ vars.TF_VAR_NODE_COUNT }}
      TF_VAR_environment: ${{ vars.TF_VAR_ENVIRONMENT }}

      TF_VAR_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_LOCATION: ${{ vars.TF_VAR_LOCATION }}
      TF_VAR_NODE_COUNT: ${{ vars.TF_VAR_NODE_COUNT }}
      TF_VAR_ENVIRONMENT: ${{ vars.TF_VAR_ENVIRONMENT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Print environment variables (Non-sensitive values)
      - name: Print environment variables
        run: |
          echo "NODE_COUNT: $TF_VAR_node_count"
          echo "LOCATION: $TF_VAR_location"
          echo "ENVIRONMENT: $TF_VAR_environment"
          echo "SUBSCRIPTION_ID: $TF_VAR_subscription_id"

      # Mask sensitive secrets while printing
      - name: Print sensitive values (masked)
        run: |
          echo "CLIENT_ID: $ARM_CLIENT_ID"
          echo "CLIENT_SECRET: [MASKED]"
          echo "TENANT_ID: $ARM_TENANT_ID"
          echo "SUBSCRIPTION_ID: $ARM_SUBSCRIPTION_ID"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Terraform Init
      - name: Terraform Init
        run: terraform init
        working-directory: environments/${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

      # Terraform Plan
      - name: Terraform Plan
        run: terraform plan
        working-directory: environments/${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

      # Terraform Apply
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: environments/${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

      # Terraform Apply
      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: environments/${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
