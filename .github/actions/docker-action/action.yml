name: "Docker Build & Push Action"
description: "Reusable Docker build and push steps"

inputs:
  image_name:
    description: "Docker image name"
    required: true
  registry_name:
    description: "ACR registry name"
    required: true
  version:
    description: "Image version"
    required: true
  working-directory:
    description: "Working directory for the Dockerfile"
    required: true

runs:
  using: "composite"
  steps:
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 693547f (Feat(Docker): Implement Multi-Stage Docker Build with Cache Optimization and Dependency Management)

    # Cache pip dependencies using actions/cache
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Build Docker image with multi-stage and cache optimization
<<<<<<< HEAD
      run: |
        echo "Building Docker image: ${{ inputs.image_name }}"
        docker build \
          --target final \
          --cache-from ${{ inputs.registry_name }}.azurecr.io/${{ inputs.image_name }}:${{ inputs.version }} \
          --tag ${{ inputs.registry_name }}.azurecr.io/${{ inputs.image_name }}:${{ inputs.version }} \
          .
=======
    - name: Build Docker image
      run: |
        echo "Image name: ${{ inputs.image_name }}"
        docker build -t ${{ inputs.registry_name }}.azurecr.io/${{ inputs.image_name }}:${{ inputs.version }} .
>>>>>>> 7aaa899 (update(cicd): Use matrix strategy and exclude parameter to control the environment deployments (#42))
=======
      run: |
        echo "Building Docker image: ${{ inputs.image_name }}"
        docker build \
          --target final \
          --cache-from ${{ inputs.registry_name }}.azurecr.io/${{ inputs.image_name }}:${{ inputs.version }} \
          --tag ${{ inputs.registry_name }}.azurecr.io/${{ inputs.image_name }}:${{ inputs.version }} \
          .
>>>>>>> 693547f (Feat(Docker): Implement Multi-Stage Docker Build with Cache Optimization and Dependency Management)
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Push Docker image to ACR
      run: |
        docker push ${{ inputs.registry_name }}.azurecr.io/${{ inputs.image_name }}:${{ inputs.version }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}
